# https://www.michael-noll.com/tutorials/writing-an-hadoop-mapreduce-program-in-python/ use this website for input
# Test mapper.py and reducer.py locally first

echo "foo foo quux labs foo bar quux" | python3 /home/hduser/battlecode_beasts/mapper.py
echo "foo foo quux labs foo bar quux" | python3 /home/hduser/battlecode_beasts/mapper.py | sort -k1,1 | python3 /home/hduser/battlecode_beasts/reducer.py

# upload
hdfs dfs -put /home/hduser/battlecode_beasts/tmp/gutenburg/
# check if uploaded
hdfs dfs -ls /home/hduser/battlecode_beasts/tmp/gutenburg/

# This is a python streaming test that does not work yet, so far the example on https://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html is the one that works
# TODO: prob dont need file flag for mapper, make sure to use relative path absolute causes problems
/home/help/hadoop/bin/hadoop jar /home/help/hadoop/share/hadoop/tools/lib/hadoop-streaming-3.3.6.jar -file /home/hduser/battlecode_beasts/mapper.py    -mapper /home/hduser/battlecode_beasts/mapper.py -file /home/hduser/battlecode_beasts/reducer.py   -reducer /home/hduser/battlecode_beasts/reducer.py -input /user/joe/wordcount/input/file01 -output /out13

# below is untested and will most likely use python over python3 so try to use the above
# very basic test
hduser@ubuntu:~$ echo "foo foo quux labs foo bar quux" | /home/hduser/mapper.py
foo     1
foo     1
quux    1
labs    1
foo     1
bar     1
quux    1

hduser@ubuntu:~$ echo "foo foo quux labs foo bar quux" | /home/hduser/mapper.py | sort -k1,1 | /home/hduser/reducer.py
bar     1
foo     3
labs    1
quux    2

# using one of the ebooks as example input
# (see below on where to get the ebooks)
hduser@ubuntu:~$ cat /tmp/gutenberg/20417-8.txt | /home/hduser/mapper.py
 The     1
 Project 1
 Gutenberg       1
 EBook   1
 of      1
 [...]
 (you get the idea)
