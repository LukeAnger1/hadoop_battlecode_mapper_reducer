# https://www.michael-noll.com/tutorials/writing-an-hadoop-mapreduce-program-in-python/ use this website for input
# Test mapper.py and reducer.py locally first

echo "foo foo quux labs foo bar quux" | python3 /home/hduser/battlecode_beasts/mapper.py
echo "foo foo quux labs foo bar quux" | python3 /home/hduser/battlecode_beasts/mapper.py | sort -k1,1 | python3 /home/hduser/battlecode_beasts/reducer.py

# upload
hadoop fs -copyFromLocal  <source_location_in_local filesystem><destination_location_in_HDFS>
# check if uploaded
hadoop fs -ls /path

# This is a python streaming test that does not work yet, so far the example on https://hadoop.apache.org/docs/stable/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html is the one that works
# TODO: prob dont need file flag for mapper, make sure to use relative path absolute causes problems
# Also note that the shebang is needed in the map and reduce and make it executable
/home/help/hadoop/bin/hadoop jar /home/help/hadoop/share/hadoop/tools/lib/hadoop-streaming-3.3.6.jar -file mapper.py    -mapper mapper.py -file reducer.py   -reducer reducer.py -input /user/joe/wordcount/input/file01 -output /out16

# The below can test the mapper
echo "bot1 | map1.      map2.map3. mapy4 | var1 ->     (1, 2, 3)    .     var2->[1, 2, 3, 4] . var3->range(1, 2, 3)
bot2 | map1.      map2.mapy3. map4 | var1 ->     (1, 2, 3)    .     var2->[1, 2, 3, 4]" | python3 mapper.py

cat test.txt | python3 mapper.py

# The below can test the reducer
echo "bot1 | map1.      map2.map3. mapy4 | var1 ->     (1, 2, 3)    .     var2->[1, 2, 3, 4] . var3->range(1, 2, 3)
bot2 | map1.      map2.mapy3. map4 | var1 ->     (1, 2, 3)    .     var2->[1, 2, 3, 4]" | python3 mapper.py | python3 reducer.py

cat test.txt | python3 mapper.py | python3 reducer.py